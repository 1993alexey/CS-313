{"version":3,"sources":["logo.svg","nav-bar/index.js","about/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","list","width","fullList","stickyMenu","position","TemporaryDrawer","anchor","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","open","event","type","key","Fragment","IconButton","color","aria-label","onClick","edge","className","clsx","menuButton","Drawer","onClose","role","onKeyDown","List","range","map","item","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","src","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,kC,ySCiBrCC,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,KAEXC,SAAU,CACND,MAAO,QAEXE,WAAY,CACRC,SAAU,WAIH,SAASC,IACpB,IAiBcC,EAjBRC,EAAUT,IADsB,EAEZU,IAAMC,SAAS,CACrCC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,IAN2B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAShCC,EAAe,SAACV,EAAQW,GAAT,OAAkB,SAACC,IACjB,YAAfA,EAAMC,MAAqC,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAI9DL,EAAS,2BAAKD,GAAN,kBAAcR,EAASW,OA+BnC,OACI,6BACI,kBAAC,IAAMI,SAAP,CAAgBD,IAAI,QAChB,kBAACE,EAAA,EAAD,CACIC,MAAM,UACNC,aAAW,cACXC,QAAST,EAAa,QAAQ,GAC9BU,KAAK,MACLC,WAAWC,YAAKrB,EAAQsB,YAAaD,YAAKrB,EAAQJ,cAElD,kBAAC,IAAD,OAEJ,kBAAC2B,EAAA,EAAD,CAAQxB,OAAO,OAAOW,KAAMH,EAAK,KAAUiB,QAASf,EAAa,QAAQ,KAvCvEV,EAwCQ,OAvClB,yBACIqB,UAAWC,YAAKrB,EAAQP,KAAT,eACVO,EAAQL,SAAsB,QAAXI,GAA+B,WAAXA,IAE5C0B,KAAK,eACLP,QAAST,EAAaV,GAAQ,GAC9B2B,UAAWjB,EAAaV,GAAQ,IAEhC,kBAAC4B,EAAA,EAAD,KACKC,IAAM,EAAG,IAAIC,KAAI,SAAAC,GAAI,OAClB,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACnB,IAAG,qBAAgBiB,GAAQG,UAAWC,IAAMC,GAAE,oBAAeL,IAC1E,kBAACM,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAO,qBAAgBR,e,UCzD9C,aACX,OACI,kBAAC,IAAMhB,SAAP,KACI,yBAAKM,UAAU,mBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,UAAUmB,IAAI,+NAC7B,uBAAGnB,UAAU,SAAb,qGAEJ,yBAAKA,UAAU,QACX,yBAAKA,UAAU,UAAUmB,IAAI,6vBAC7B,uBAAGnB,UAAU,SAAb,8GAEJ,yBAAKA,UAAU,QACX,yBAAKA,UAAU,UAAUmB,IAAI,6vBAC7B,uBAAGnB,UAAU,SAAb,gGAEJ,yBAAKA,UAAU,YCyBhBoB,MA/Bf,WACE,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MAcA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,IAAD,CAAUP,GAAG,YAEb,kBAAC,IAAD,CAAOO,KAAK,UACV,kBAAC,EAAD,WCxBMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6f611c0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport range from 'lodash/range';\nimport { Link } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    stickyMenu: {\n        position: 'fixed',\n    }\n});\n\nexport default function TemporaryDrawer() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {range(3, 12).map(item => (\n                    <ListItem button key={`Assignment ${item}`} component={Link} to={`assignment${item}`}>\n                        <ListItemIcon><AssignmentIcon /></ListItemIcon>\n                        <ListItemText primary={`Assignment ${item}`} />\n                    </ListItem>\n                ))}\n            </List>\n                {/* <Divider />\n                <List>\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                </List> */}\n        </div>\n    );\n\n    return (\n        <div>\n            <React.Fragment key=\"left\">\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={toggleDrawer('left', true)}\n                    edge=\"end\"\n                    className={clsx(classes.menuButton), clsx(classes.stickyMenu)}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Drawer anchor=\"left\" open={state['left']} onClose={toggleDrawer('left', false)}>\n                    {list('left')}\n                </Drawer>\n            </React.Fragment>\n        </div>\n    );\n}\n","import React from 'react'\nimport './about.css';\n\nexport default () => {\n    return (\n        <React.Fragment>\n            <div className=\"container-intro\">\n                <div className=\"item\">\n                    <img className=\"wife-me\" src=\"https://lh3.googleusercontent.com/pw/ACtC-3dl3mw-fgSKxf5mVbCZaox86oj2-OyzrjGxWQu_CHnIQHirACHTiwyKMXPo8SOVz0q8dIZD3yCrchJENEWPP5cNs2YEIaYepeauwyImJhcNYqCH4BATHwzrxcbskqlIzWGfnXLCcXt5CZvT7t7Oh9XT=w889-h1334-no?authuser=0\"/>\n                    <p className=\"intro\">This is me with my wife. We are international students. She is from Taiwan and I am from Ukraine</p>\n                </div>\n                <div className=\"item\">\n                    <img className=\"wife-me\" src=\"https://lh3.googleusercontent.com/GVXsialxSgz6qla-pU3iW8Gvy8o0V72fyZHQtk6Ju_cosGlA9t0TX4gq0qvU4zazfi_gm-7yAOLRoLCCCjIM6yeCilJrtss5h1TMLgSCBG8fjl9Hh0hk66PhdmEXGUHF5YZaXsM029WtdsDJf9cX5VuegFPE4AXbLupgy-moiMzIK7j1BeEusxJUptpsYRLJ_A239qoXW79Ea64w7bc1gQ11hrGUp9NxTcXxAcBLD0OCslE9TTtGeOvDM47WE3Xyy3mjnUW0dkQ1rR_XAKNOuWIoy7WqA6vHZtkGABUs0fAy-LmtDv833FTFd-mf4Ep3f8wj3xW1Mo2LEVSUJ36WRTEyig9u7vQchYcLFbhJuLQJH2ZZ1gDVGtqrZlbSVsLVSQFl7qD4oRTN_TtmScToSQBFoRz0QgCH1z7DPY2PQO0fB-j3iIPPVs54Dqrg21L5C203GQpSkn6nYkH89kWQGk3qaVYrK9GsWFW9vsTIndQ1-IoX-c_6R3hlKzjDtWAKu2-v8EgC4w47Tzz5is4-bB1Q1GwvYk_-htkgK69P-tE-5m0WB-ep3S2GwMl-8Zo9pe-WiTj1WHCatiz8nNzd1MSQ5SqcHdBAlXfb9i9vali2zoVsyvB3mjhVT1xGdL5MvPeATCzSGfuJAt4n3AVjZDVDBrt-pQGo5qTV2z82R-82iER0Y2hVH93apWb_=w1120-h1492-no?authuser=0\"/>\n                    <p className=\"intro\">This is our little girl. When she was born, we were only half way though our degree. She is 10 months now</p>\n                </div>\n                <div className=\"item\">\n                    <img className=\"wife-me\" src=\"https://lh3.googleusercontent.com/X2uQWs6D8UHL4QGYMOpulL_yTlugUlKwdFZS9uuoa_qbyTOHyLI_lAubmNyWpBhZmyR3yiXC6_mVPXKP8lXOKpt7I4yZHCVGYm8pWRm10sMIAqsJHso6fgnHmXFU8uRmoWUZg_jMfXpb91Ok3_-2ZOujeZJV5zMXC_TlMOblABbNC5-TIzS9bdp_8u2jI8ZRYGVXD1Hc8mgMd9L2KW1kYp7VAf0u7WHRq17VujW3gDrZNSKvDPgS6YoBaZIwKGcDbu7xMxeqr70U4VTBxs0Xkj19QA9jsYmTTjBgOVG41pnVHmK83uctkFwSWg26GGyGKzRATIcoTYK54qBhAsSZZ1emCOE9lhWyyeVQ-Nqu2zoe89XA0PlOaBJ8SE8p-WxnBzQ7IryU_4N8acw7C6vzeSAzq9zmMIRNkRqPyLZG8oohUQbUMRJONee0lRUJ3c9adBdU2fmXmFoyTS84m1tbFC7ZhTuyyM__r8zNJTaLQswI0TRW51LMkadFceE0N6CjadRMNxMdqSeVFu_BBFgXycEjD_DJhnvaEg3F9tKz8GXjfQBP6mNptzAVoPyiBCs6h-o0CL8Y9TrNdqv1QYXzpV4Q31_v5hIv8qmlBVuOBi6raKeHIqG170EpRp_wH3A6VuYQ4Os35nWAYrutGdyGslhU2egaB2GFzOeNvBZaTsjm7qIorJAyCzU8OWOX=w1120-h1492-no?authuser=0\"/>\n                    <p className=\"intro\">I love outdoors. 3 times a week I go mountain running to prepare for the Ech-Challenge Fiji</p>\n                </div>\n                <div className=\"item\"></div>\n            </div>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport NavBar from './nav-bar/index'\nimport About from './about/index'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <NavBar />\n        {/* <div>\n          <ul>\n            <li>\n              <Link to=\"/test\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/topics\">Topics</Link>\n            </li>\n          </ul> */}\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/about\" />\n          </Route>\n            <Route path=\"/about\">\n              <About />\n          </Route>\n          </Switch>\n        </Router>\n      </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}